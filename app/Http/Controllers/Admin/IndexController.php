<?php

namespace App\Http\Controllers\Admin;


use App\Http\Controllers\Controller;
use App\Model\WebDomainConfig;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\Input;
use Illuminate\Support\Facades\Storage;

class IndexController extends Controller
{
    public function __call($method, $parameters)
    {
        parent::__call($method, $parameters); // TODO: Change the autogenerated stub
    }

    public function index()
    {
        $domainConfig = WebDomainConfig::find(1);
        //dd($domainConfig -> toArray());
        return view('admin.index',compact('domainConfig'));
    }

    public function store(Request $request)
    {
       // $s = Request::capture() -> all();
       // dd($s);

        $domainConfig = $request -> except('_token','_method');
        WebDomainConfig::create($domainConfig);
        return view('admin.index');

    }
    public function update($id,Request $request)//PUT|PATCH admin/domainConfig/{id}
    {



        $logoPath = '';

        $file = $request->file('logo_file');
        $input  = $request -> except('_token','_method','logo_file');
        if ($file !=null && $file -> isFile()) {
            // 获取文件相关信息
            $originalName = $file->getClientOriginalName(); // 文件原名
            $ext = $file->getClientOriginalExtension();     // 扩展名
            $realPath = $file->getRealPath();   //临时文件的绝对路径
            $type = $file->getClientMimeType();     // image/jpeg
            $fileNames = $file->getFilename().'.'.$ext;
          //  $path =   Storage::disk('uploads')->putFileAs('logo', $file, 'logo.jpg');
         //  dd($path);
           //基于驱动的存储目录，文件名称，驱动（filesystems.php的配置）
         //   $path = $file ->storeAs(
          //      'logo', 'logo.'.$ext,'uploads'
          //  );
            //基于驱动的存储目录，文件名称，驱动（filesystems.php的配置）
            $path =  $file -> storePubliclyAs('images', 'logo.'.$ext,'public_uploads');
            $logoPath = $path;
           // echo $originalName.$ext.$realPath.$type.$path;
            $input['logo']=$logoPath;
        }

        WebDomainConfig::with($id) -> update($input);
        $domainConfig = WebDomainConfig::find(1);
        //dd($domainConfig -> toArray());
       // return view('admin.index',compact('domainConfig','$path'));
        return redirect('admin');

    }
    public function login()
    {
        echo 'IndexController->loginr---namespace -i';

    }
}
